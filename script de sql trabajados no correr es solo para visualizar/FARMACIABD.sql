-- ARCHIVO DEPURADO: FARMACIABD SOLO CON ESTRUCTURA Y USUARIO.

-- ===========================================
-- BLOQUE 01: ELIMINACIÓN Y CREACIÓN DE BASE Y USUARIO
-- ===========================================

DROP DATABASE IF EXISTS FARMACIABD;
DROP USER IF EXISTS 'usuario_farmacia'@'%';

CREATE DATABASE FARMACIABD;
CREATE USER 'usuario_farmacia'@'%' IDENTIFIED BY 'ClaveFarmacia123.';
GRANT ALL PRIVILEGES ON FARMACIABD.* TO 'usuario_farmacia'@'%';

-- ===========================================
-- BLOQUE 02: USO DE LA BASE DE DATOS
-- ===========================================
USE FARMACIABD;

-- ===========================================
-- BLOQUE 03: TABLA GENERAL DE ESTADOS
-- ===========================================
CREATE TABLE FIDE_ESTADO_TB (
    ID_ESTADO INT AUTO_INCREMENT,
    DESCRIPCION VARCHAR(100) NOT NULL,
    CONSTRAINT PK_FIDE_ESTADO PRIMARY KEY (ID_ESTADO)
);


-- ===========================================
-- BLOQUE 04: TABLAS DE USUARIOS Y ROLES
-- ===========================================
CREATE TABLE USUARIO (
    ID BIGINT AUTO_INCREMENT,
    NOMBRE VARCHAR(255) NOT NULL,
    CORREO VARCHAR(100) NOT NULL,
    USUARIO VARCHAR(50) NOT NULL,
    CONTRASENA VARCHAR(100) NOT NULL,
    CONSTRAINT PK_USUARIO PRIMARY KEY (ID),
    CONSTRAINT UQ_USUARIO UNIQUE (USUARIO)
);
CREATE TABLE USUARIO (
    ID BIGINT AUTO_INCREMENT,
    NOMBRE VARCHAR(255) NOT NULL,
    CORREO VARCHAR(100) NOT NULL,
    USUARIO VARCHAR(50) NOT NULL,
    CONTRASENA VARCHAR(100) NOT NULL,
    ID_ESTADO INT DEFAULT 1,
    CONSTRAINT PK_USUARIO PRIMARY KEY (ID),
    CONSTRAINT UQ_USUARIO UNIQUE (USUARIO),
    CONSTRAINT FK_USUARIO_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);

CREATE TABLE ROL (
    ID BIGINT AUTO_INCREMENT,
    NOMBRE VARCHAR(50) NOT NULL,
    CONSTRAINT PK_ROL PRIMARY KEY (ID)
);

CREATE TABLE USUARIO_ROL (
    USUARIO_ID BIGINT,
    ROL_ID BIGINT,
    CONSTRAINT PK_USUARIO_ROL PRIMARY KEY (USUARIO_ID, ROL_ID),
    CONSTRAINT FK_USUARIO_ROL_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO(ID) ON DELETE CASCADE,
    CONSTRAINT FK_USUARIO_ROL_ROL FOREIGN KEY (ROL_ID) REFERENCES ROL(ID) ON DELETE CASCADE
);

CREATE TABLE CLIENTE (
    ID_CLIENTE BIGINT AUTO_INCREMENT,
    ID_USUARIO BIGINT NOT NULL,
    CEDULA VARCHAR(20),
    TELEFONO VARCHAR(20),
    DIRECCION VARCHAR(255),
    FECHA_NACIMIENTO DATE,
    SEXO VARCHAR(10),
    ALERGIAS TEXT,
    CONSTRAINT PK_CLIENTE PRIMARY KEY (ID_CLIENTE),
    CONSTRAINT FK_CLIENTE_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID) ON DELETE CASCADE
);

-- ===========================================
-- BLOQUE 05: TABLAS DE LA RAMA INVENTARIO
-- ===========================================
CREATE TABLE FIDE_UNIDAD_MEDIDA_TB (
    ID_UNIDAD_MEDIDA INT AUTO_INCREMENT,
    NOMBRE VARCHAR(50) NOT NULL,
    ID_ESTADO INT,
    CONSTRAINT PK_UNIDAD_MEDIDA PRIMARY KEY (ID_UNIDAD_MEDIDA),
    CONSTRAINT FK_UNIDAD_MEDIDA_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);

CREATE TABLE FIDE_CATEGORIA_PRODUCTO_TB (
    ID_CATEGORIA_PRODUCTO INT AUTO_INCREMENT,
    NOMBRE VARCHAR(100) NOT NULL,
    ID_ESTADO INT,
    CONSTRAINT PK_CATEGORIA_PRODUCTO PRIMARY KEY (ID_CATEGORIA_PRODUCTO),
    CONSTRAINT FK_CATEGORIA_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);

CREATE TABLE FIDE_PRODUCTO_TB (
    CODIGO VARCHAR(20) NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    PRECIO_UNITARIO DECIMAL(10,2),
    ID_CATEGORIA_PRODUCTO INT,
    ID_UNIDAD_MEDIDA INT,
    ID_ESTADO INT,
    URL_IMAGEN VARCHAR(255),
    CONSTRAINT PK_PRODUCTO PRIMARY KEY (CODIGO),
    CONSTRAINT FK_PRODUCTO_CATEGORIA FOREIGN KEY (ID_CATEGORIA_PRODUCTO) REFERENCES FIDE_CATEGORIA_PRODUCTO_TB(ID_CATEGORIA_PRODUCTO),
    CONSTRAINT FK_PRODUCTO_UNIDAD FOREIGN KEY (ID_UNIDAD_MEDIDA) REFERENCES FIDE_UNIDAD_MEDIDA_TB(ID_UNIDAD_MEDIDA),
    CONSTRAINT FK_PRODUCTO_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);

CREATE TABLE FIDE_LOTE_TB (
    ID_LOTE INT AUTO_INCREMENT,
    CODIGO VARCHAR(20),
    NUMERO_LOTE VARCHAR(100),
    FECHA_ELABORADO DATE,
    FECHA_VENCIMIENTO DATE,
    ID_ESTADO INT,
    CONSTRAINT PK_LOTE PRIMARY KEY (ID_LOTE),
    CONSTRAINT FK_LOTE_PRODUCTO FOREIGN KEY (CODIGO) REFERENCES FIDE_PRODUCTO_TB(CODIGO),
    CONSTRAINT FK_LOTE_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);

CREATE TABLE FIDE_FARMACIA_TB (
    ID_FARMACIA INT AUTO_INCREMENT,
    NOMBRE VARCHAR(100) NOT NULL,
    ID_ESTADO INT,
    CONSTRAINT PK_FARMACIA PRIMARY KEY (ID_FARMACIA),
    CONSTRAINT FK_FARMACIA_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);

CREATE TABLE FIDE_INVENTARIO_TB (
    ID_INVENTARIO INT AUTO_INCREMENT,
    CODIGO VARCHAR(20),
    CANTIDAD_DISPONIBLE INT NOT NULL,
    STOCK_MINIMO INT,
    STOCK_MAXIMO INT,
    ID_FARMACIA INT,
    ID_ESTADO INT,
    CONSTRAINT PK_INVENTARIO PRIMARY KEY (ID_INVENTARIO),
    CONSTRAINT FK_INVENTARIO_PRODUCTO FOREIGN KEY (CODIGO) REFERENCES FIDE_PRODUCTO_TB(CODIGO),
    CONSTRAINT FK_INVENTARIO_FARMACIA FOREIGN KEY (ID_FARMACIA) REFERENCES FIDE_FARMACIA_TB(ID_FARMACIA),
    CONSTRAINT FK_INVENTARIO_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);

CREATE TABLE TIPO_ALERTA (
    ID_TIPO_ALERTA INT AUTO_INCREMENT,
    NOMBRE VARCHAR(100) NOT NULL,
    ID_ESTADO INT,
    CONSTRAINT PK_TIPO_ALERTA PRIMARY KEY (ID_TIPO_ALERTA),
    CONSTRAINT FK_TIPO_ALERTA_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);

CREATE TABLE FIDE_ALERTA_TB (
    ID_ALERTA INT AUTO_INCREMENT,
    FECHA_ALERTA DATE NOT NULL,
    ID_TIPO_ALERTA INT,
    ID_INVENTARIO INT,
    ID_ESTADO INT,
    CONSTRAINT PK_ALERTA PRIMARY KEY (ID_ALERTA),
    CONSTRAINT FK_ALERTA_TIPO FOREIGN KEY (ID_TIPO_ALERTA) REFERENCES TIPO_ALERTA(ID_TIPO_ALERTA),
    CONSTRAINT FK_ALERTA_INVENTARIO FOREIGN KEY (ID_INVENTARIO) REFERENCES FIDE_INVENTARIO_TB(ID_INVENTARIO),
    CONSTRAINT FK_ALERTA_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);

CREATE TABLE FIDE_MOVIMIENTO_TB (
    ID_MOVIMIENTO       INT AUTO_INCREMENT PRIMARY KEY,
    ID_INVENTARIO       INT NOT NULL,
    ID_LOTE             INT NOT NULL,
    FECHA_MOVIMIENTO    DATE NOT NULL,
    FECHA_VENCIMIENTO   DATE NOT NULL,
    TIPO_MOVIMIENTO     VARCHAR(10) CHECK (TIPO_MOVIMIENTO IN ('Entrada', 'Salida')),
    CANTIDAD            INT NOT NULL,
    DESCRIPCION         VARCHAR(255),
    EMPRESA             VARCHAR(100),
    ID_FARMACIA         INT NOT NULL,
    CONSTRAINT FK_MOVIMIENTO_INVENTARIO FOREIGN KEY (ID_INVENTARIO) REFERENCES FIDE_INVENTARIO_TB(ID_INVENTARIO),
    CONSTRAINT FK_MOVIMIENTO_LOTE FOREIGN KEY (ID_LOTE) REFERENCES FIDE_LOTE_TB(ID_LOTE),
    CONSTRAINT FK_MOVIMIENTO_FARMACIA FOREIGN KEY (ID_FARMACIA) REFERENCES FIDE_FARMACIA_TB(ID_FARMACIA)
);


-- ===========================================
-- BLOQUE 06: TABLA DE REGISTRO DE ERRORES
-- ===========================================
CREATE TABLE TERROR (
    ID_ERROR INT AUTO_INCREMENT,
    DESCRIPCION TEXT NOT NULL,
    FECHAHORA DATETIME NOT NULL,
    CONSTRAINT PK_TERROR PRIMARY KEY (ID_ERROR)
);


-- ===========================================
-- BLOQUE 07: SOLICITUDES
-- ===========================================
CREATE TABLE FIDE_TIPO_PAGO_TB (
    ID_TIPO_PAGO INT AUTO_INCREMENT,
    NOMBRE VARCHAR(100) NOT NULL,
    ID_ESTADO INT,
    CONSTRAINT PK_TIPO_PAGO PRIMARY KEY (ID_TIPO_PAGO),
    CONSTRAINT FK_TIPO_PAGO_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);

CREATE TABLE FIDE_FACTURA_TB (
    ID_FACTURA INT AUTO_INCREMENT,
    FECHA DATE NOT NULL,
    TOTAL DECIMAL(10,2) NOT NULL,
    IMPUESTO DECIMAL(10,2) NOT NULL,
    ID_TIPO_PAGO INT,
    ID_ESTADO INT,
    CONSTRAINT PK_FACTURA PRIMARY KEY (ID_FACTURA),
    CONSTRAINT FK_FACTURA_TIPO_PAGO FOREIGN KEY (ID_TIPO_PAGO) REFERENCES FIDE_TIPO_PAGO_TB(ID_TIPO_PAGO),
    CONSTRAINT FK_FACTURA_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);

CREATE TABLE FIDE_SOLICITUD_TB (
    ID_SOLICITUD INT AUTO_INCREMENT,
    FECHA DATE NOT NULL,
    ID_CLIENTE BIGINT NOT NULL,
    ID_FACTURA INT,
    ID_ESTADO INT,
    CONSTRAINT PK_SOLICITUD PRIMARY KEY (ID_SOLICITUD),
    CONSTRAINT FK_SOLICITUD_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
    CONSTRAINT FK_SOLICITUD_FACTURA FOREIGN KEY (ID_FACTURA) REFERENCES FIDE_FACTURA_TB(ID_FACTURA),
    CONSTRAINT FK_SOLICITUD_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);

CREATE TABLE FIDE_DETALLE_SOLICITUD_TB (
    ID_DETALLE_SOLICITUD INT AUTO_INCREMENT,
    ID_SOLICITUD INT NOT NULL,
    ID_INVENTARIO INT NOT NULL,
    ID_USUARIO BIGINT NOT NULL,
    CANTIDAD_SOLICITADA INT NOT NULL,
    CANTIDAD_ENTREGADA INT DEFAULT 0,
    ID_ESTADO INT,
    CONSTRAINT PK_DETALLE_SOLICITUD PRIMARY KEY (ID_DETALLE_SOLICITUD),
    CONSTRAINT FK_DETALLE_SOLICITUD_SOLICITUD FOREIGN KEY (ID_SOLICITUD) REFERENCES FIDE_SOLICITUD_TB(ID_SOLICITUD),
    CONSTRAINT FK_DETALLE_SOLICITUD_INVENTARIO FOREIGN KEY (ID_INVENTARIO) REFERENCES FIDE_INVENTARIO_TB(ID_INVENTARIO),
    CONSTRAINT FK_DETALLE_SOLICITUD_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID),
    CONSTRAINT FK_DETALLE_SOLICITUD_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES FIDE_ESTADO_TB(ID_ESTADO)
);



-- FIN DEL SCRIPT DE ESTRUCTURA


SELECT COUNT(*) FROM USUARIO;
SELECT COUNT(*) FROM CLIENTE;
SELECT COUNT(*) FROM USUARIO_ROL;
SELECT COUNT(*) FROM ROL;
SELECT COUNT(*) FROM FIDE_ESTADO_TB;
